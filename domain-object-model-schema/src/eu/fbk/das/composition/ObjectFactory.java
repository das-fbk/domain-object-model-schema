//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.02 at 04:58:42 PM CET 
//


package eu.fbk.das.composition;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the eu.fbk.das.composition package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: eu.fbk.das.composition
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Composition }
     * 
     */
    public Composition createComposition() {
        return new Composition();
    }

    /**
     * Create an instance of {@link ControlFlowType }
     * 
     */
    public ControlFlowType createControlFlowType() {
        return new ControlFlowType();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result }
     * 
     */
    public ControlFlowType.Result createControlFlowTypeResult() {
        return new ControlFlowType.Result();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Situation }
     * 
     */
    public ControlFlowType.Result.Situation createControlFlowTypeResultSituation() {
        return new ControlFlowType.Result.Situation();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Event }
     * 
     */
    public ControlFlowType.Result.Event createControlFlowTypeResultEvent() {
        return new ControlFlowType.Result.Event();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Event.Condition }
     * 
     */
    public ControlFlowType.Result.Event.Condition createControlFlowTypeResultEventCondition() {
        return new ControlFlowType.Result.Event.Condition();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Action }
     * 
     */
    public ControlFlowType.Result.Action createControlFlowTypeResultAction() {
        return new ControlFlowType.Result.Action();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Action.Condition }
     * 
     */
    public ControlFlowType.Result.Action.Condition createControlFlowTypeResultActionCondition() {
        return new ControlFlowType.Result.Action.Condition();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Trycatch }
     * 
     */
    public ControlFlowType.Result.Trycatch createControlFlowTypeResultTrycatch() {
        return new ControlFlowType.Result.Trycatch();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Trycatch.Catch }
     * 
     */
    public ControlFlowType.Result.Trycatch.Catch createControlFlowTypeResultTrycatchCatch() {
        return new ControlFlowType.Result.Trycatch.Catch();
    }

    /**
     * Create an instance of {@link Composition.Runtime }
     * 
     */
    public Composition.Runtime createCompositionRuntime() {
        return new Composition.Runtime();
    }

    /**
     * Create an instance of {@link Composition.Runtime.Fragments }
     * 
     */
    public Composition.Runtime.Fragments createCompositionRuntimeFragments() {
        return new Composition.Runtime.Fragments();
    }

    /**
     * Create an instance of {@link Composition.Runtime.DomainProperties }
     * 
     */
    public Composition.Runtime.DomainProperties createCompositionRuntimeDomainProperties() {
        return new Composition.Runtime.DomainProperties();
    }

    /**
     * Create an instance of {@link Composition.NextActions }
     * 
     */
    public Composition.NextActions createCompositionNextActions() {
        return new Composition.NextActions();
    }

    /**
     * Create an instance of {@link Composition.Synchronization }
     * 
     */
    public Composition.Synchronization createCompositionSynchronization() {
        return new Composition.Synchronization();
    }

    /**
     * Create an instance of {@link Composition.Synchronization.Point }
     * 
     */
    public Composition.Synchronization.Point createCompositionSynchronizationPoint() {
        return new Composition.Synchronization.Point();
    }

    /**
     * Create an instance of {@link Composition.Constraints }
     * 
     */
    public Composition.Constraints createCompositionConstraints() {
        return new Composition.Constraints();
    }

    /**
     * Create an instance of {@link Composition.Fragments }
     * 
     */
    public Composition.Fragments createCompositionFragments() {
        return new Composition.Fragments();
    }

    /**
     * Create an instance of {@link Composition.Fragments.Fragment }
     * 
     */
    public Composition.Fragments.Fragment createCompositionFragmentsFragment() {
        return new Composition.Fragments.Fragment();
    }

    /**
     * Create an instance of {@link Composition.DomainProperties }
     * 
     */
    public Composition.DomainProperties createCompositionDomainProperties() {
        return new Composition.DomainProperties();
    }

    /**
     * Create an instance of {@link Composition.ControlFlowRequirements }
     * 
     */
    public Composition.ControlFlowRequirements createCompositionControlFlowRequirements() {
        return new Composition.ControlFlowRequirements();
    }

    /**
     * Create an instance of {@link ControlFlowType.Premise }
     * 
     */
    public ControlFlowType.Premise createControlFlowTypePremise() {
        return new ControlFlowType.Premise();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.And }
     * 
     */
    public ControlFlowType.Result.And createControlFlowTypeResultAnd() {
        return new ControlFlowType.Result.And();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Then }
     * 
     */
    public ControlFlowType.Result.Then createControlFlowTypeResultThen() {
        return new ControlFlowType.Result.Then();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Or }
     * 
     */
    public ControlFlowType.Result.Or createControlFlowTypeResultOr() {
        return new ControlFlowType.Result.Or();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Situation.DomainProperty }
     * 
     */
    public ControlFlowType.Result.Situation.DomainProperty createControlFlowTypeResultSituationDomainProperty() {
        return new ControlFlowType.Result.Situation.DomainProperty();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Event.Condition.DomainProperty }
     * 
     */
    public ControlFlowType.Result.Event.Condition.DomainProperty createControlFlowTypeResultEventConditionDomainProperty() {
        return new ControlFlowType.Result.Event.Condition.DomainProperty();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Action.Condition.DomainProperty }
     * 
     */
    public ControlFlowType.Result.Action.Condition.DomainProperty createControlFlowTypeResultActionConditionDomainProperty() {
        return new ControlFlowType.Result.Action.Condition.DomainProperty();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Trycatch.Try }
     * 
     */
    public ControlFlowType.Result.Trycatch.Try createControlFlowTypeResultTrycatchTry() {
        return new ControlFlowType.Result.Trycatch.Try();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Trycatch.Catch.Condition }
     * 
     */
    public ControlFlowType.Result.Trycatch.Catch.Condition createControlFlowTypeResultTrycatchCatchCondition() {
        return new ControlFlowType.Result.Trycatch.Catch.Condition();
    }

    /**
     * Create an instance of {@link ControlFlowType.Result.Trycatch.Catch.Reaction }
     * 
     */
    public ControlFlowType.Result.Trycatch.Catch.Reaction createControlFlowTypeResultTrycatchCatchReaction() {
        return new ControlFlowType.Result.Trycatch.Catch.Reaction();
    }

    /**
     * Create an instance of {@link Composition.Runtime.Fragments.Fragment }
     * 
     */
    public Composition.Runtime.Fragments.Fragment createCompositionRuntimeFragmentsFragment() {
        return new Composition.Runtime.Fragments.Fragment();
    }

    /**
     * Create an instance of {@link Composition.Runtime.DomainProperties.DomainProperty }
     * 
     */
    public Composition.Runtime.DomainProperties.DomainProperty createCompositionRuntimeDomainPropertiesDomainProperty() {
        return new Composition.Runtime.DomainProperties.DomainProperty();
    }

    /**
     * Create an instance of {@link Composition.NextActions.Action }
     * 
     */
    public Composition.NextActions.Action createCompositionNextActionsAction() {
        return new Composition.NextActions.Action();
    }

    /**
     * Create an instance of {@link Composition.Synchronization.Point.DomainProperty }
     * 
     */
    public Composition.Synchronization.Point.DomainProperty createCompositionSynchronizationPointDomainProperty() {
        return new Composition.Synchronization.Point.DomainProperty();
    }

    /**
     * Create an instance of {@link Composition.Constraints.Constraint }
     * 
     */
    public Composition.Constraints.Constraint createCompositionConstraintsConstraint() {
        return new Composition.Constraints.Constraint();
    }

    /**
     * Create an instance of {@link Composition.Fragments.Fragment.Assignment }
     * 
     */
    public Composition.Fragments.Fragment.Assignment createCompositionFragmentsFragmentAssignment() {
        return new Composition.Fragments.Fragment.Assignment();
    }

    /**
     * Create an instance of {@link Composition.DomainProperties.DomainProperty }
     * 
     */
    public Composition.DomainProperties.DomainProperty createCompositionDomainPropertiesDomainProperty() {
        return new Composition.DomainProperties.DomainProperty();
    }

}
